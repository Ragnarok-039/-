# Задача 3.
# Функция для нахождения длины максимального непрерывного подмассива
# с одинаковым количеством 0 и 1.
def find_max_length(my_l):
    # Добавим к массиву любое число, не входящее в условие задачи (0 и 1)
    # для расширения начального списка.
    my_l.append(2)

    # Зададим максимальную длину изначально == 0.
    my_max = 0
    # Добавим счетчики количества 1 и 0.
    count_0 = 0
    count_1 = 0
    # Две переменные для выявления того факта, что непрерывная последовательность 0 и 1 закончилась.
    first, second = None, None
    # Перебираем расширенный список.
    for now in my_l:
        # На каждой итерации меняем значения первой переменной на вторую,
        # а вторую переменную на текущее значение из списка.
        first, second = second, now
        # Если первая переменная == 1, а вторая уже != 1, это значит,
        # что непрерывный подмассив из 0 и 1 закончился.
        if first == 1 and second != 1:
            # Дальше необходимо проверить количество 0 и 1 в таком подмассиве.
            # По условию количество 0 и 1 должно быть равным.
            # Поэтому, если где-то перевес (0 больше, чем 1, или наоборот)
            # мы должны уравнять обе части, взяв наименьшее значение 0 или 1.
            if count_0 > count_1:
                count_0 = count_1
            elif count_1 > count_0:
                count_1 = count_0
            # Если счетчики количества 0 и 1 больше максимального значения, то перед нами
            # максимальный непрерывный подмассив 0 и 1.
            if count_0 + count_1 > my_max:
                my_max = count_0 + count_1
            # Меняем значения переменных для последующих итераций.
            first, second = None, now
            count_0, count_1 = 0, 0
        # Обычные счетчики 0 и 1.
        if now == 0:
            count_0 += 1
        elif now == 1:
            count_1 += 1
    return my_max


print(find_max_length([0, 1, 0]))
print(find_max_length([0, 1]))
print(find_max_length([0, 0, 0, 1, 1, 0]))
print(find_max_length([0, 0, 1, 1, 1, 1, 1]))
print(find_max_length([0, 0, 1, 0, 0, 1, 1, 0, 1]))
